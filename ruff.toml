# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
    "E",   # pycodestyle errors
    "F",   # Pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "ERA", # eradicate
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "RSE", # flake8-raise
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "TC",  # flake8-type-checking
]

ignore = [
    "ANN001", # Missing type annotation for self
    "ANN002", # Missing type annotation for cls
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
    "ERA001", # Commented-out code
    "PIE790", # Unnecessary pass
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8
target-version = "py38"

[mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]
# Ignore type annotation issues in tests
"tests/*" = ["ANN"]

[pydocstyle]
convention = "google" # Follows Google-style docstrings

[flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[flake8-import-conventions.aliases]
# Declare known third-party modules.
numpy = "np"
pandas = "pd"
matplotlib = "plt"
seaborn = "sns"

[isort]
combine-as-imports = true
force-wrap-aliases = true
known-first-party = []    # Add your project's modules here

[pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
